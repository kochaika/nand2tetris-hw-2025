// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Mux4Way16.hdl
/**
 * 4-way 16-bit multiplexor:
 * out = a if sel = 00
 *       b if sel = 01
 *       c if sel = 10
 *       d if sel = 11
 */
CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];
    
    PARTS:
    Mux(a=a[0] , b=b[0] , sel=sel[0] , out=a0 );
    Mux(a=c[0] , b=d[0] , sel=sel[0] , out=b0 );
    Mux(a=a0 , b=b0 , sel=sel[1] , out=out[0] );

    Mux(a=a[1] , b=b[1] , sel=sel[0] , out=a1 );
    Mux(a=c[1] , b=d[1] , sel=sel[0] , out=b1 );
    Mux(a=a1 , b=b1 , sel=sel[1] , out=out[1] );

    Mux(a=a[2] , b=b[2] , sel=sel[0] , out=a2 );
    Mux(a=c[2] , b=d[2] , sel=sel[0] , out=b2 );
    Mux(a=a2 , b=b2 , sel=sel[1] , out=out[2] );

    Mux(a=a[3] , b=b[3] , sel=sel[0] , out=a3 );
    Mux(a=c[3] , b=d[3] , sel=sel[0] , out=b3 );
    Mux(a=a3 , b=b3 , sel=sel[1] , out=out[3] );

    Mux(a=a[4] , b=b[4] , sel=sel[0] , out=a4 );
    Mux(a=c[4] , b=d[4] , sel=sel[0] , out=b4 );
    Mux(a=a4 , b=b4 , sel=sel[1] , out=out[4] );

    Mux(a=a[5] , b=b[5] , sel=sel[0] , out=a5 );
    Mux(a=c[5] , b=d[5] , sel=sel[0] , out=b5 );
    Mux(a=a5 , b=b5 , sel=sel[1] , out=out[5] );

    Mux(a=a[6] , b=b[6] , sel=sel[0] , out=a6 );
    Mux(a=c[6] , b=d[6] , sel=sel[0] , out=b6 );
    Mux(a=a6 , b=b6 , sel=sel[1] , out=out[6] );

    Mux(a=a[7] , b=b[7] , sel=sel[0] , out=a7 );
    Mux(a=c[7] , b=d[7] , sel=sel[0] , out=b7 );
    Mux(a=a7 , b=b7 , sel=sel[1] , out=out[7] );

    Mux(a=a[8] , b=b[8] , sel=sel[0] , out=a8 );
    Mux(a=c[8] , b=d[8] , sel=sel[0] , out=b8 );
    Mux(a=a8 , b=b8 , sel=sel[1] , out=out[8] );

    Mux(a=a[9] , b=b[9] , sel=sel[0] , out=a9 );
    Mux(a=c[9] , b=d[9] , sel=sel[0] , out=b9 );
    Mux(a=a9 , b=b9 , sel=sel[1] , out=out[9] );

    Mux(a=a[10] , b=b[10] , sel=sel[0] , out=a10 );
    Mux(a=c[10] , b=d[10] , sel=sel[0] , out=b10 );
    Mux(a=a10 , b=b10 , sel=sel[1] , out=out[10] );

    Mux(a=a[11] , b=b[11] , sel=sel[0] , out=a11 );
    Mux(a=c[11] , b=d[11] , sel=sel[0] , out=b11 );
    Mux(a=a11 , b=b11 , sel=sel[1] , out=out[11] );

    Mux(a=a[12] , b=b[12] , sel=sel[0] , out=a12 );
    Mux(a=c[12] , b=d[12] , sel=sel[0] , out=b12 );
    Mux(a=a12 , b=b12 , sel=sel[1] , out=out[12] );

    Mux(a=a[13] , b=b[13] , sel=sel[0] , out=a13 );
    Mux(a=c[13] , b=d[13] , sel=sel[0] , out=b13 );
    Mux(a=a13 , b=b13 , sel=sel[1] , out=out[13] );

    Mux(a=a[14] , b=b[14] , sel=sel[0] , out=a14 );
    Mux(a=c[14] , b=d[14] , sel=sel[0] , out=b14 );
    Mux(a=a14 , b=b14 , sel=sel[1] , out=out[14] );

    Mux(a=a[15] , b=b[15] , sel=sel[0] , out=a15 );
    Mux(a=c[15] , b=d[15] , sel=sel[0] , out=b15 );
    Mux(a=a15 , b=b15 , sel=sel[1] , out=out[15] );
}