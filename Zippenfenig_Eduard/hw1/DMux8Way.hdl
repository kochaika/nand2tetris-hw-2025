/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Mux(a=in, b=false, sel=sel[0], out=out1);
    Mux(a=out1, b=false, sel=sel[1], out=out2);
    Mux(a=out2, b=false, sel=sel[2], out=a);

    Mux(a=false, b=in, sel=sel[0], out=out3);
    Mux(a=out3, b=false, sel=sel[1], out=out4);
    Mux(a=out4, b=false, sel=sel[2], out=b);

    Mux(a=in, b=false, sel=sel[0], out=out5);
    Mux(a=false, b=out5, sel=sel[1], out=out6);
    Mux(a=out6, b=false, sel=sel[2], out=c);

    Mux(a=false, b=in, sel=sel[0], out=out7);
    Mux(a=false, b=out7, sel=sel[1], out=out8);
    Mux(a=out8, b=false, sel=sel[2], out=d);

    Mux(a=in, b=false, sel=sel[0], out=out9);
    Mux(a=out9, b=false, sel=sel[1], out=out10);
    Mux(a=false, b=out10, sel=sel[2], out=e);

    Mux(a=false, b=in, sel=sel[0], out=out11);
    Mux(a=out11, b=false, sel=sel[1], out=out12);
    Mux(a=false, b=out12, sel=sel[2], out=f);

    Mux(a=in, b=false, sel=sel[0], out=out13);
    Mux(a=false, b=out13, sel=sel[1], out=out14);
    Mux(a=false, b=out14, sel=sel[2], out=g);

    Mux(a=false, b=in, sel=sel[0], out=out15);
    Mux(a=false, b=out15, sel=sel[1], out=out16);
    Mux(a=false, b=out16, sel=sel[2], out=h);
}