// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    //// Replace this comment with your code.
    Not(in= sel[2], out= notSel0);
    DMux4Way(in= in, sel= sel[0..1], a= i1, b= i2, c= i3, d= i4);
    DMux4Way(in= in, sel= sel[0..1], a= i5, b= i6, c= i7, d= i8);
    And(a= i1, b= notSel0, out= a);
    And(a= i2, b= notSel0, out= b);
    And(a= i3, b= notSel0, out= c);
    And(a= i4, b= notSel0, out= d);
    And(a= i5, b= sel[2], out= e);
    And(a= i6, b= sel[2], out= f);
    And(a= i7, b= sel[2], out= g);
    And(a= i8, b= sel[2], out= h);
}