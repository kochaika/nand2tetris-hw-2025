// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/Bit.hdl
/**
 * 1-bit register:
 * If load is asserted, the register's value is set to in;
 * Otherwise, the register maintains its current value:
 * if (load(t)) out(t+1) = in(t), else out(t+1) = out(t)
 */
// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/Bit.hdl
/**
 * 1-bit register:
 * If load is asserted, the register's value is set to in;
 * Otherwise, the register maintains its current value:
 * if (load(t)) out(t+1) = in(t), else out(t+1) = out(t)
 */

CHIP Bit {
    IN in, load;
    OUT out;

    PARTS:
    DFF(in=a , out=b );
    //data flip flop. DFF stores the value provided as input(a) and outputs it as (b)
    //a is either the previous value(b) or the new input(in),
    //depending on he signal load. The value b is passed to the Mux
    Mux(a=b , b=in , sel=load , out=a );
    //this is like a selector or a switch 
    //in a we have the previously stored value
    //in b we have the new input
    //the selector depends on load
    //the output will be whether the new value or the previously stored one
    DFF(in=a , out=out );
}
